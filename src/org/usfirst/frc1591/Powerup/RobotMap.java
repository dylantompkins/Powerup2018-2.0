// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1591.Powerup;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Ultrasonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTrainleftTalon;
    public static WPI_TalonSRX driveTrainrightTalon;
    public static RobotDrive driveTrainrobotDrive;
    public static SpeedController pullypullySpark;
    public static DigitalInput pullypullyLimitTop;
    public static DigitalInput pullypullyLimitBottom;
    public static DigitalInput pullypullyLimitMid;
    public static SpeedController clawclawSpark;
    public static Ultrasonic sensorssonicSensor;
    public static AnalogGyro sensorsgyro;
    public static Ultrasonic sensorssonicSensor2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainleftTalon = new WPI_TalonSRX(5);
        
        
        driveTrainrightTalon = new WPI_TalonSRX(7);
        
        
        driveTrainrobotDrive = new RobotDrive(driveTrainleftTalon, driveTrainrightTalon);
        
        driveTrainrobotDrive.setSafetyEnabled(true);
        driveTrainrobotDrive.setExpiration(0.1);
        driveTrainrobotDrive.setSensitivity(0.5);
        driveTrainrobotDrive.setMaxOutput(1.0);

        driveTrainrobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        pullypullySpark = new Spark(0);
        LiveWindow.addActuator("pully", "pullySpark", (Spark) pullypullySpark);
        pullypullySpark.setInverted(false);
        pullypullyLimitTop = new DigitalInput(0);
        LiveWindow.addSensor("pully", "pullyLimitTop", pullypullyLimitTop);
        
        pullypullyLimitBottom = new DigitalInput(1);
        LiveWindow.addSensor("pully", "pullyLimitBottom", pullypullyLimitBottom);
        
        pullypullyLimitMid = new DigitalInput(6);
        LiveWindow.addSensor("pully", "pullyLimitMid", pullypullyLimitMid);
        
        clawclawSpark = new Spark(1);
        LiveWindow.addActuator("claw", "clawSpark", (Spark) clawclawSpark);
        clawclawSpark.setInverted(false);
        sensorssonicSensor = new Ultrasonic(2, 3);
        LiveWindow.addSensor("sensors", "sonicSensor", sensorssonicSensor);
        
        sensorsgyro = new AnalogGyro(0);
        LiveWindow.addSensor("sensors", "gyro", sensorsgyro);
        sensorsgyro.setSensitivity(0.007);
        sensorssonicSensor2 = new Ultrasonic(4, 5);
        LiveWindow.addSensor("sensors", "sonicSensor2", sensorssonicSensor2);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
